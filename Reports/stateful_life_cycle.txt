Stateful Widget Lifecycle in Flutter
1. Creation Phase:
Constructor (MyStatefulWidget):

The constructor is called when the widget is created. It initializes the widget and its properties.
createState():

This method creates the mutable state object associated with this widget. It is called only once during the widget's lifecycle.
initState():

Invoked after the widget is inserted into the tree. It's used for one-time initialization tasks, such as initializing controllers or listeners.
2. Building Phase:
build():
This is a required method that defines the part of the user interface represented by the widget. It is called every time the widget is rebuilt, such as when there is a change in the widget's state.
3. State Changes:
setState():
When the internal state of the widget changes, this method is called. It triggers a rebuild of the widget's UI.
4. Update Phase:
didUpdateWidget(oldWidget):

Called whenever the widget is updated with a new configuration. It provides an opportunity to compare old and new widget properties.
build():

The build method is called again to rebuild the UI based on the updated state or configuration.
5. Deactivation Phase:
deactivate():
Called when the widget is removed from the tree. It allows for cleanup, but the state is retained.
6. Destruction Phase:
dispose():
Called when the widget is removed permanently from the tree. It is used for cleanup, such as closing streams or disposing of controllers.